; ModuleID = 'example'
source_filename = "example"

declare i32 @println(i32) local_unnamed_addr

define i32 @count(i32 %curr, i32 %endval) local_unnamed_addr {
entry:
  %.not3.not = icmp sgt i32 %curr, %endval
  br i1 %.not3.not, label %end.1, label %then.1

end.1:                                            ; preds = %then.1, %entry
  ret i32 0

then.1:                                           ; preds = %entry, %then.1
  %curr.tr4 = phi i32 [ %1, %then.1 ], [ %curr, %entry ]
  %0 = tail call i32 @println(i32 %curr.tr4)
  %1 = add i32 %curr.tr4, 1
  %.not = icmp sgt i32 %1, %endval
  br i1 %.not, label %end.1, label %then.1
}

define i32 @main() local_unnamed_addr {
entry:
  br label %then.1.i

then.1.i:                                         ; preds = %then.1.i, %entry
  %curr.tr4.i = phi i32 [ %1, %then.1.i ], [ 1, %entry ]
  %0 = tail call i32 @println(i32 %curr.tr4.i)
  %1 = add nuw nsw i32 %curr.tr4.i, 1
  %.not.i = icmp ugt i32 %curr.tr4.i, 499999
  br i1 %.not.i, label %count.exit, label %then.1.i

count.exit:                                       ; preds = %then.1.i
  %2 = tail call i32 @println(i32 1)
  ret i32 0
}
